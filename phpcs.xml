<?xml version="1.0"?>
<ruleset name="WP Plugin Project">
	<description>WordPress plugin development project</description>

	<!-- Exclude folders -->
	<!--<exclude-pattern>/docroot/wp-admin/*</exclude-pattern> -->

	<!-- Check all files -->
	<file>./</file>

	<!-- Reporting: Because we are lazy -->
	<arg value="s" />

	<!-- Include the WordPress-Extra standard. -->
	<rule ref="WordPress-Extra"/>

	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of
	custom properties.
	Adjust the values of these properties to fit our needs.

	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<config name="minimum_supported_wp_version" value="4.9"/>

	<!--
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="my-textdomain,library-textdomain"/>
		</properties>
	</rule>-->


	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" value="tdt_hw_"/>
		</properties>
	</rule>

	
	<rule ref="Generic">
		<exclude name="Generic.Arrays.DisallowLongArraySyntax.Found" />

		<exclude name="Generic.Files.LineLength.TooLong" />
		<exclude name="Generic.Files.EndFileNoNewline.Found" />

		<exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine" />

		<exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning" />
		<exclude name="Generic.Formatting.NoSpaceAfterCast.SpaceFound" />

		<exclude name="Generic.Commenting.DocComment.ShortNotCapital" />
		<exclude name="Generic.Commenting.DocComment.SpacingBeforeTags" />

		<!-- ...is not in camel caps format -->
        <exclude name="Generic.NamingConventions.CamelCapsFunctionName.NotCamelCaps" />
		<exclude name="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps" />

		<exclude name="Squiz.Commenting.FileComment.MissingPackageTag" />
		<exclude name="Squiz.Commenting.DocCommentAlignment.SpaceBeforeStar" />
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis" />

		<!-- Inline comments must end in full-stops, exclamation marks, or question marks -->
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />

		<!-- We'll come back to this one -->
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType" />
        
		<!-- I prefer that space -->
        <exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword" />
        
		<exclude name="Generic.PHP.ClosingPHPTag" />
		<exclude name="Generic.PHP.UpperCaseConstant.Found" />
        
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed" />
		
		<exclude name="WordPress.Arrays.ArrayKeySpacingRestrictions.SpacesAroundArrayKeys" />
	</rule>

</ruleset>
